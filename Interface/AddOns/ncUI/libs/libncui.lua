--[[ holders --local _, lib = ...local db = ncUIdb["general"]local addon = CreateFrame("Frame")-- localized for the speed --local floor = math.floor-- constants --lib.RESOLUTION = GetCVar("gxResolution")lib.RESOWIDTH, lib.RESOHEIGHT = string.match(lib.RESOLUTION, "(%d+)x(%d+)")lib.PP = 768/lib.RESOHEIGHT/db.uiscale-- hooks & events --function lib.Hook(tab, func, mode, hookfunc)	if type(tab)=="table" then		if not tab[func] then			error("Index not found in the table")			return		end	else		hookfunc = mode		mode = func		func = tab		tab = _G	end	local orig = tab[func]	if mode=="pre" then		tab[func] = function(...)			hookfunc(...)			orig(...)		end	elseif mode=="pre-feed" then		tab[func] = function(...)			orig(hookfunc(...))		end	elseif mode=="post-feed" then		tab[func] = function(...)			hookfunc(orig(...))		end	else		tab[func] = function(...)			orig(...)			hookfunc(...)		end	endend-- graphics & frames --function lib.Round(num)	return floor(num + .5)endfunction lib.Scale(px)	return PP * floor(px + .5)endfunction lib.SpawnFont(obj, name, layer)	return obj:CreateFontString(name, layer or "OVERLAY", "ncUIfont")endfunction lib.SetTemplate(obj)	obj:SetBackdrop({		bgFile = ncUIdb["media"].solid,		edgeFile = ncUIdb["media"].solid,		tile = false, tileSize = 0, edgeSize = PP,		insets = {			left = -PP,			right = -PP,			top = -PP,			bottom = -PP,		}	})	obj:SetBackdropColor(unpack(db.backdrop))	obj:SetBackdropBorderColor(unpack(db.border))endfunction lib.Pixelperfect(obj)	local setwidth, setheight, setsize, setpoint = obj.SetWidth, obj.SetHeight, obj.SetSize, obj.SetPoint	if setwidth then	endendlocal function createframe(...)	local obj = CreateFrame(...)		obj.SetTemplate = lib.SetTemplate	obj.SpawnFont = lib.SpawnFont		lib:Hook(obj, "SetSize", "pre-feed", function(w, h)		if not h then			h = w		end				return lib:Scale(w), lib:Scale(h)	end)	lib:Hook(obj, "SetWidth", "pre-feed", function(w) return lib:Scale(w) end)	end]]